{"version":3,"sources":["data/index.js","components/NavResults/index.js","components/Header/index.js","components/GameCard/index.js","components/GameBoard/index.js","App.js","serviceWorker.js","index.js"],"names":["characters","name","image","map","ch","idx","module","exports","navMessages","id","msg","NavResult","_ref","messages","msgCode","currScore","maxScore","react_default","a","createElement","className","href","Header","props","GameCard","onClick","cardClick","src","alt","GameBoard","character","components_GameCard","key","App","state","guessedIds","navMsgCode","navMsgs","currentScore","_this","includes","setState","concat","Object","toConsumableArray","sort","b","Math","random","this","NavResults","components_Header","components_GameBoard","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dc0ff9c5.chunk.js","sourcesContent":["let characters = [{\n    name: \"Arya Stark\",\n    image: \"./img/arya.jpg\"\n  },\n  {\n    name: \"Cersei Lannister\",\n    image: \"./img/cersei.jpg\"\n  },\n  {\n    name: \"Daenerys Targaryen\",\n    image: \"./img/daenerys.jpeg\"\n  },\n  {\n    name: \"Sandor Clegane\",\n    image: \"./img/dog.jpeg\"\n  },\n  {\n    name: \"Khal Drogo\",\n    image: \"./img/drogo.jpg\"\n  },\n  {\n    name: \"Joffrey Baratheon\",\n    image: \"./img/joffrey.jpg\"\n  },\n  {\n    name: \"Jon Snow\",\n    image: \"./img/jon.jpg\"\n  },\n  {\n    name: \"Margery Tyrell\",\n    image: \"./img/margery.jpeg\"\n  },\n  {\n    name: \"Ned Stark\",\n    image: \"./img/ned.jpg\"\n  },\n  {\n    name: \"Peter Baelish\",\n    image: \"./img/peter.jpg\"\n  },\n  {\n    name: \"Sansa Stark\",\n    image: \"./img/sansa.jpg\"\n  },\n  {\n    name: \"Tyrion Lannister\",\n    image: \"./img/tyrion.jpg\"\n  }\n]\n\n\n// Add Array Index as id Property to each element.\ncharacters = characters.map((ch, idx) => {\n  ch[\"id\"] = idx;\n  return ch;\n});\n\nconst navMessages = [{\n    id: 0,\n    msg: \"Click an image to begin!\"\n  },\n  {\n    id: 1,\n    msg: \"Geeze!!! Try Again!!\"\n  },\n  {\n    id: 2,\n    msg: \"Excellent!! Hit the Next One!!!\"\n  },\n  {\n    id: 3,\n    msg: \"You Win!!  Click an image to restart!\"\n  },\n]\n\nmodule.exports = {\n  characters,\n  navMessages\n}","import React from \"react\";\n\nfunction NavResult({ messages, msgCode, currScore, maxScore }) {\n  return (\n    <nav className=\"navbar fixed-top navbar-expand-sm navbar-dark bg-dark\">\n      <div className=\"container\">\n        <a\n          href=\"https://github.com/adriansg85/clickygame/\"\n          className=\"navbar-brand\"\n        >\n          Adrian 's <br /> Clicky Game{\" \"}\n        </a>\n\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <div className=\"navbar-text mr-1\">\n              <strong> Score: </strong> {currScore}{\" \"}\n            </div>{\" \"}\n          </li>{\" \"}\n          <li className=\"nav-item\">\n            <div className=\"navbar-text\">\n              <strong> Top Score: </strong> {maxScore}{\" \"}\n            </div>{\" \"}\n          </li>{\" \"}\n        </ul>\n\n        <div className=\"navbar-text text-center mx-auto d-block d-sm-none\">\n          <h5> {messages[msgCode].msg} </h5>{\" \"}\n        </div>\n      </div>{\" \"}\n    </nav>\n  );\n}\n\nexport default NavResult;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Header(props) {\n  return (\n    <div className=\"jumbotron instructions\">\n      <h1 className=\"text-center\"> Game of Thrones Clicky Game! </h1>{\" \"}\n      <h3 className=\"text-center\">\n        {\" \"}\n        Click on an image to earn points, If you click one twice you lose.{\" \"}\n      </h3>{\" \"}\n    </div>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport './style.css';\n\nfunction GameCard(props) {\n  return (\n    <div className=\"col-3 col-md-3 col-lg-3 p-1 p-sm-2\">\n      <div \n        className={props.maxScore === 0 || (0 < props.currScore && props.currScore <= 12) ? \"game-card-img-wrapper\" : \"game-card-img-wrapper shake\"} \n        onClick={props.cardClick}\n      >\n        <img src={props.image} alt={props.name}/>\n      </div>\n    </div>\n  );\n}\n\nexport default GameCard;","import React from \"react\";\nimport GameCard from \"../GameCard\";\nimport './style.css';\n\nfunction GameBoard(props) {\n  return (\n    <div className=\"container mb-xs-1 mb-sm-2\">\n\n      <div className=\"row\">\n        {props.characters.map(character => (\n          <GameCard \n            key={character.id} \n            id={character.id} \n            name={character.name}\n            image={character.image}\n            cardClick={()=>props.cardClick(character.id)}\n            maxScore={props.maxScore}\n            currScore={props.currScore}\n          />\n        ))}\n\n      </div>\n    </div>\n  );\n}\n\nexport default GameBoard;","import React, {\n  Component\n} from 'react';\nimport {\n  characters,\n  navMessages\n} from './data'\nimport NavResults from \"./components/NavResults\";\nimport Header from \"./components/Header\";\nimport GameBoard from \"./components/GameBoard\";\nimport \"./App.css\";\n\nclass App extends Component {\n\n  state = {\n    characters: characters,\n    guessedIds: [],\n    maxScore: 0,\n    currScore: 0,\n    navMsgCode: 0,\n    navMsgs: navMessages,\n  };\n\n\n  componentDidMount() {\n    this.setState({\n      characters: this.state.characters.sort((a, b) => 0.5 - Math.random())\n    })\n  }\n\n  cardClick = (id) => {\n    const currentScore = this.state.currScore < 12 ?\n      this.state.currScore + 1 : 1;\n\n    if (!(this.state.guessedIds.includes(id))) {\n\n      const maxScore = this.state.maxScore;\n      this.setState({\n        guessedIds: currentScore < 12 ? [...this.state.guessedIds, id] : [],\n        navMsgCode: currentScore < 12 ? 2 : 3,\n        currScore: currentScore,\n        maxScore: currentScore >= maxScore ? currentScore : maxScore\n      });\n    } else {\n      this.setState({\n        guessedIds: [],\n        navMsgCode: 1,\n        currScore: 0\n      });\n    }\n\n    this.setState({\n      characters: this.state.characters.sort((a, b) => 0.5 - Math.random())\n    })\n  }\n\n  render() {\n    return ( <\n      div className = \"container\" >\n      <\n      NavResults messages = {\n        this.state.navMsgs\n      }\n      msgCode = {\n        this.state.navMsgCode\n      }\n      currScore = {\n        this.state.currScore\n      }\n      maxScore = {\n        this.state.maxScore\n      }\n      /> <\n      Header / >\n      <\n      GameBoard characters = {\n        this.state.characters\n      }\n      cardClick = {\n        this.cardClick\n      }\n      currScore = {\n        this.state.currScore\n      }\n      maxScore = {\n        this.state.maxScore\n      }\n      /> < /\n      div >\n    );\n  }\n}\n\nexport default App;","const isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  window.location.hostname === '[::1]' ||\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        checkValidServiceWorker(swUrl, config);\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              console.log('Content is cached for offline use.');\n\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  fetch(swUrl)\n    .then(response => {\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render( < App / > , document.getElementById('root'));\n\nserviceWorker.unregister();"],"sourceRoot":""}